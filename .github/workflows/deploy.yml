name: Deploy

on:
  workflow_run:
    workflows: [Test]
    types:
      - completed
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        type: choice
        options:
          - staging
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
    env:
      IMAGE_NAME: feedstand/${{ matrix.app }}:${{ github.sha }}
      ZIP_NAME: feedstand-${{ matrix.app }}.tar.gz
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ${{ matrix.app }} image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} -f apps/${{ matrix.app }}/.docker/Dockerfile.prod --build-arg VERSION_TAG=${{ github.sha }} .
          docker save ${{ env.IMAGE_NAME }} | gzip > ${{ env.ZIP_NAME }}

      - name: Store ${{ matrix.app }} image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}

      - name: Store docker compose artifact
        if: ${{ matrix.app == 'frontend' }}
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose.prod.yml
          path: .docker/docker-compose.prod.yml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download image artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*"
          path: .
          merge-multiple: true

      - name: Copy images and compose file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: feedstand-frontend.tar.gz,feedstand-backend.tar.gz,docker-compose.prod.yml
          target: ${{ secrets.SERVER_PATH }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ${{ secrets.SERVER_PATH }}
            docker load < feedstand-frontend.tar.gz
            docker load < feedstand-backend.tar.gz
            export VERSION_TAG=${{ github.sha }}
            docker stack deploy -c docker-compose.prod.yml feedstand
